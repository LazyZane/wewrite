name: Smart Release

on:
  push:
    branches:
      - master

permissions:
  contents: write

jobs:
  smart-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Read version from manifest.json
        id: read_version
        run: |
          VERSION=$(jq -r .version manifest.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "tag=$VERSION" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "$VERSION" >/dev/null 2>&1; then
            echo "Tag $VERSION already exists. Skipping release."
            echo "SKIP_RELEASE=true" >> $GITHUB_ENV
          else
            echo "SKIP_RELEASE=false" >> $GITHUB_ENV
          fi

      - name: Exit if tag exists (do not fail)
        if: env.SKIP_RELEASE == 'true'
        run: echo "Skipping release because tag $VERSION already exists."
        continue-on-error: true

      - name: Update versions.json
        if: env.SKIP_RELEASE == 'false'
        run: |
          jq --arg v "$VERSION" --argjson m "$(cat manifest.json)" \
            '. + {($v): $m}' versions.json > versions.tmp.json
          mv versions.tmp.json versions.json

      - name: Build plugin
        if: env.SKIP_RELEASE == 'false'
        run: yarn build

      - name: Commit updated versions.json
        if: env.SKIP_RELEASE == 'false'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add versions.json
          git commit -m "chore: update versions.json for $VERSION"
          git push

      - name: Create and push Git tag
        if: env.SKIP_RELEASE == 'false'
        run: |
          git tag "$VERSION"
          git push origin "$VERSION"

      - name: Create GitHub Release
        if: env.SKIP_RELEASE == 'false'
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ env.VERSION }}
          tag_name: ${{ env.VERSION }}
          files: |
            main.js
            manifest.json
            styles.css
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
